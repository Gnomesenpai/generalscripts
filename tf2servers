#!/bin/bash
version="Version 0.3"


#lets define some things
home="/home/game"
includes="/includes"
user="game"
host="la.moevsmachine.tf"

#start servers
if [ "$1" == "start" ]; then
    echo "Erecting a server!"
    parallel -k --jobs 5 < "$home$includes/starttf2.sh"
    printf "Servers started!"


#stop servers
elif [ "$1" == "stop" ]; then
    echo "Timberrrrr! Servers going down!"
    parallel -k < "$home$includes/stoptf2.sh"
    printf "Servers stopped!"

#test

#update servers
elif [ "$1" == "update" ]; then
    echo "Inb4 localisation files"
    printf "Stopping the servers"       #stop them
    parallel -k < "$home$includes/stoptf2.sh"
    printf "Running update script"      #run the update script
    parallel -k --jobs 4 < "$home$includes/updatetf2.sh"
    printf  "Starting the servers"      #start them again
    parallel -k --jobs 5 < "$home$includes/starttf2.sh"


#reboot servers
elif [ "$1" == "restart" ]; then
    echo "Turn it off and on again"
    printf "Stopping the servers"       #stop them
    parallel -k < "$home$includes/stoptf2.sh"
    printf  "Starting the servers"      #start them again
    parallel -k --jobs 5 < "$home$includes/starttf2.sh"

elif [ "$1" == "info" ]; then
    if [ "$2" == "local" ]; then
        echo "Pulling local stats"
        echo ""
        echo "Uptime"
        uptime
        echo ""
        echo "File System Usage"
        df -h
        echo ""
        echo "RAM Usage"
        free -h
    elif [ "$2" == "la" ]; then    
        echo "Pulling LA stats"
        echo ""
        echo "Uptime"
        ssh $user@$host 'uptime'
        echo ""
        echo "File System Usage"
        ssh $user@$host 'df -h'
        echo ""
        echo "RAM Usage"
        ssh $user@$host 'free -h'    
    else
        echo "Available Options:"
        echo ""
        echo -e "\tLocal     -   Local Resource Usages & Uptime"
        echo -e "\tLA     -   Remote Resource Usages & Uptime"
    fi


#REMOTE SERVER EXECUTE
#SSH Keys then remote execution?
elif [ "$1" == "la" ]; then
    #start remote servers
    if [ "$2" == "start" ]; then
        echo "Erecting a remote server!"
        ssh $user@$host 'parallel -k < "/home/game/includes/starttf2.sh"'
        #ssh $user@$host 'bash -s' < script.sh
        #parallel -k < "$home$includes/starttf2.sh"
        printf "Remote servers started!"


    #stop remote servers
    elif [ "$2" == "stop" ]; then
        echo "Timberrrrr! Servers going down!"
        ssh $user@$host 'parallel -k < "/home/game/includes/stoptf2.sh"'
        #parallel -k < "$home$includes/stoptf2.sh"
        printf "Remote servers stopped!"


    #update remote servers
    elif [ "$2" == "update" ]; then
        echo "Inb4 remote localisation files"
        printf "Stopping the remote servers"       #stop them
        ssh $user@$host 'parallel -k < "/home/game/includes/stoptf2.sh"'
        #parallel -k < "$home$includes/stoptf2.sh"
        printf "Running the remote update script"      #run the update script
        ssh $user@$host 'parallel -k < "/home/game/includes/updatetf2.sh"'
        #parallel -k --jobs 4 < "$home$includes/updatetf2.sh"
        printf  "Starting the remote servers"      #start them again
        ssh $user@$host 'parallel -k < "/home/game/includes/starttf2.sh"'
        #parallel -k --jobs 5 < "$home$includes/starttf2.sh"


    #reboot remote servers
    elif [ "$2" == "restart" ]; then
        echo "Turn it off and on again, remotely!"
        printf "Stopping the remote servers"       #stop them
        ssh $user@$host 'parallel -k < "/home/game/includes/stoptf2.sh"'
        #parallel -k < "$home$includes/stoptf2.sh"
        printf  "Starting the remote servers"      #start them again
        ssh $user@$host 'parallel -k < "/home/game/includes/starttf2.sh"'
        #parallel -k --jobs 5 < "$home$includes/starttf2.sh"
      

    else
        echo "Available Options:"
        echo ""
        echo -e "\tStart     -   start all REMOTE TF2 servers"
        echo -e "\tStop      -   stop all REMOTE TF2 servers"
        echo -e "\tUpdate    -   update all REMOTE TF2 servers"
        echo -e "\tRestart   -   restart all REMOTE TF2 servers"

    fi
#print options
else
echo ""
echo "Available Options:"
echo ""
echo -e "\tStart     -   start all LOCAL TF2 servers"
echo -e "\tStop      -   stop all LOCAL TF2 servers"
echo -e "\tUpdate    -   update all LOCAL TF2 servers"
echo -e "\tRestart   -   restart all LOCAL TF2 servers"
echo -e "\tInfo      -   Pull Local & Remote Uptime, Disk usage, memory usage & load average"
echo -e "\tla        -   Push remote commands"
echo ""
echo "$version"
echo ""
fi
echo ""
echo $(date '+%d %b %Y %H:%M:%S')."- Complete";
echo "-----"